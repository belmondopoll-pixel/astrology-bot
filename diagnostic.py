import asyncio
import sys
import os
sys.path.append(os.path.dirname(__file__))

async def diagnostic():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º"""
    print("üîß –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏...")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    try:
        from config import BOT_TOKEN, GEMINI_API_KEY
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: OK")
        print(f"   BOT_TOKEN: {'***' + BOT_TOKEN[-4:] if BOT_TOKEN else '–ù–ï–¢'}")
        print(f"   GEMINI_API_KEY: {'***' + GEMINI_API_KEY[-4:] if GEMINI_API_KEY else '–ù–ï–¢'}")
    except Exception as e:
        print(f"‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    try:
        from database import db
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: OK")
    except Exception as e:
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Gemini
    try:
        from services.gemini_service import gemini_service
        if gemini_service.model_name != "none":
            print(f"‚úÖ Gemini API: OK (–º–æ–¥–µ–ª—å: {gemini_service.model_name})")
        else:
            print("‚ö†Ô∏è Gemini API: –¢–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è")
    except Exception as e:
        print(f"‚ùå Gemini API: {e}")
    
    print("üéØ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

if __name__ == "__main__":
    asyncio.run(diagnostic())