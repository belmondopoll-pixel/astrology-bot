import asyncio
import sys
import os
sys.path.append(os.path.dirname(__file__))

from services.gemini_service import gemini_service
from services.fallback_service import fallback_service
from services.payment_service import payment_service

async def test_all_services():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"""
    print("üß™ –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤...")
    
    # –¢–µ—Å—Ç Gemini
    print("\n1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Gemini API...")
    try:
        horoscope = await gemini_service.safe_generate_horoscope("–û–≤–µ–Ω")
        print(f"‚úÖ Gemini —Ä–∞–±–æ—Ç–∞–µ—Ç: {len(horoscope)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"üìù –ü—Ä–∏–º–µ—Ä: {horoscope[:100]}...")
    except Exception as e:
        print(f"‚ùå Gemini –æ—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç Fallback Service
    print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞...")
    try:
        fallback_horoscope = fallback_service.generate_horoscope("–¢–µ–ª–µ—Ü")
        print(f"‚úÖ Fallback —Å–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç: {len(fallback_horoscope)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"üìù –ü—Ä–∏–º–µ—Ä: {fallback_horoscope[:100]}...")
    except Exception as e:
        print(f"‚ùå Fallback –æ—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç Payment Service
    print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã...")
    try:
        price = payment_service.get_service_price("compatibility")
        print(f"‚úÖ –ü–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print(f"üí∞ –¶–µ–Ω–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏: {price} –∑–≤–µ–∑–¥")
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂
        test_user_id = 12345
        result = await payment_service.process_payment(test_user_id, "compatibility")
        print(f"üí≥ –¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂: {'‚úÖ –£—Å–ø–µ—Ö' if result else '‚ùå –û—à–∏–±–∫–∞'}")
        
    except Exception as e:
        print(f"‚ùå Payment –æ—à–∏–±–∫–∞: {e}")
    
    print("\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    asyncio.run(test_all_services())