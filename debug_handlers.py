import asyncio
import sys
import os
sys.path.append(os.path.dirname(__file__))

async def debug_handlers():
    """–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
    print("üêõ –û–¢–õ–ê–î–ö–ê –ó–ê–ì–†–£–ó–ö–ò –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í")
    print("=" * 50)
    
    try:
        # –ü—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª–∏ –ø–æ –æ–¥–Ω–æ–º—É
        print("1. –ò–º–ø–æ—Ä—Ç config...")
        from config import BOT_TOKEN, GEMINI_API_KEY
        print("   ‚úÖ config –∑–∞–≥—Ä—É–∂–µ–Ω")
        
        print("2. –ò–º–ø–æ—Ä—Ç database...")
        from database import db
        print("   ‚úÖ database –∑–∞–≥—Ä—É–∂–µ–Ω")
        
        print("3. –ò–º–ø–æ—Ä—Ç paid_services...")
        from handlers.paid_services import router as paid_router
        print("   ‚úÖ paid_services –∑–∞–≥—Ä—É–∂–µ–Ω")
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –≤ paid_services: {len(paid_router.message.handlers) + len(paid_router.callback_query.handlers)}")
        
        print("4. –ò–º–ø–æ—Ä—Ç user_handlers...")
        from handlers.user_handlers import router
        print("   ‚úÖ user_handlers –∑–∞–≥—Ä—É–∂–µ–Ω")
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –≤ user_handlers: {len(router.message.handlers) + len(router.callback_query.handlers)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        print("\nüìã –ó–ê–†–ï–ì–ò–°–¢–†–ò–†–û–í–ê–ù–ù–´–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò:")
        
        print("   –°–æ–æ–±—â–µ–Ω–∏—è:")
        for handler in router.message.handlers:
            if hasattr(handler.filters, 'text') and hasattr(handler.filters.text, 'value'):
                print(f"     - {handler.filters.text.value}")
        
        print("   Callback-–∑–∞–ø—Ä–æ—Å—ã:")
        for handler in router.callback_query.handlers:
            if hasattr(handler.filters, 'data'):
                print(f"     - {handler.filters.data}")
        
        return True
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = asyncio.run(debug_handlers())
    if success:
        print("\nüéâ –í—Å–µ –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print("\nüí• –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –º–æ–¥—É–ª–µ–π!")